---------------------------------------------------------------------
Linux: 

download src.tgz and install.sh  from
http://ntslab01.na.infn.it/cgi-bin/cvsweb.cgi/fedra/

in your fedra directory unpack src.tgz as 
[fedra]$ tar zxvf src.tgz

Automatic instalaltion procedure for linux (thanks to Markus)

type in this directory
"./install.sh" or 
". ./install.sh" (depending on the shell)

This script do: 
- setting of variables in config-files
- compilation of libraries and "recset" on demand.
- creation of  "setup_new.sh" is included, depending on default SHELL from
  the user, placed at top directory.

at this point all libraries/binaries should be created and ready for use

type "source ./setup_new.sh" to update PATH and LD_LIBRARY_PATH


---------------------------------------------------------------------
Windows (new installation procedure):
needs: MS Visual Studio .NET or MS Visual Studio .NET 2003

- download and unpack the fedra package

- the installation starts by clicking on the "install.cmd" icon.

or in details:

- Open a Command Prompt and execute "%ProgramFiles%\Microsoft Visual Studio .NET 2003\Vc7
  \bin\vsvars32.bat" or artenatively open a "Visual Studio .NET 2003 Command Prompt" from
  the start menu (Visual Studio .NET Tools).
- Change to the fedra directory and type install.cmd
	This script do the same installation as the linux version. 
	Type "setup_new.cmd" to update PATH and environment variables.
	Restart the command prompt to use the new environment variables.

note:
Once you have set the environment variables and path, FEDRA can be compiled 
also from the Visual Studio Development Environment.
The MS Visual Studio solution is $(FEDRA_ROOT)\win32\solution\Fedra.sln
Take care to set the $(ROOTSYS)\bin in the "executable" directories.
	- from the menu toolbar: Tools -> Options -> Projects -> VC++ Directories 
	- show directories for "Executables files" 
	- add $(ROOTSYS)\bin otherwise rootcint cannot be executed


 