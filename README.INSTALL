download fedra-vx-xx-xx.tgz  from
http://ntslab01.na.infn.it/fedra/download/

---------------------------------------------------------------------
Linux: 

in your fedra directory unpack fedra-vx-xx-xx.tgz as 
[fedra]$ tar zxvf fedra-vx-xx-xx.tgz  

Automatic installation procedure for linux (thanks to Markus)

type in this directory
"./install.sh" or 
". ./install.sh" (depending on the shell)

This script do: 
- setting of variables in config-files
- compilation of libraries and "recset" on demand.
- creation of  "setup_new.sh" is included, depending on default SHELL from
  the user, placed at top directory.

at this point all libraries/binaries should be created and ready for use

type "source ./setup_new.sh" to update PATH and LD_LIBRARY_PATH

---------------------------------------------------------------------
Windows (new installation procedure):
needs: MS Visual Studio .NET or MS Visual Studio .NET 2003

How to compile FEDRA (standard procedure):

1. download fedra-vx-xx-xx.tgz and unpack the fedra package
2. register the SySalDataIO library (regsvr32 SysalDataIO.dll)
3. click on the "install.cmd" icon.
4. the environment variables are updated only for the current user. 
   Other users must execute the "setup_new.cmd" to update their environments.


How to compile FEDRA from the command prompt:

- Open a Command Prompt and execute "%ProgramFiles%\Microsoft Visual Studio .NET 2003\Vc7
  \bin\vsvars32.bat" or artenatively open a "Visual Studio .NET 2003 Command Prompt" from
  the start menu (Visual Studio .NET Tools).
- Change to the fedra directory and type install.cmd
	Type "setup_new.cmd" to update PATH and environment variables.
	Restart the command prompt to use the new environment variables.


How to compile FEDRA from the Visual Studio Development Environment:

Once you have set the environment variables and path, FEDRA can be compiled 
also from the Visual Studio Development Environment.
The MS Visual Studio solution is $(FEDRA_ROOT)\win32\solution\Fedra.sln
Take care to set the $(ROOTSYS)\bin in the "executable" directories.
	- from the menu toolbar: Tools -> Options -> Projects -> VC++ Directories 
	- show directories for "Executables files" 
	- add $(ROOTSYS)\bin otherwise rootcint cannot be executed


 