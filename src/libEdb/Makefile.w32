ObjSuf        = obj
SrcSuf        = cxx
ExeSuf        = .exe
DllSuf        = dll
OutPutOpt     = /out:

# Win32 system with Microsoft Visual C/C++
!include <win32.mak>
CC            = $(cc)
CXX           = $(cc)

CXXFLAGS      = $(cvarsdll) -nologo  -G5 -GR -MD -DWIN32 -DVISUAL_CPLUSPLUS -D_WINDOWS -I$(ROOTSYS)/include

LD            = $(link)
LDOPT         = -opt:ref
LDFLAGS       = $(LDOPT) $(conlflags) -nologo -pdb:none
SOFLAGS       = $(dlllflags:/PDB:NONE=)
ROOTLIBS      = $(ROOTSYS)/lib/libCore.lib \
                $(ROOTSYS)/lib/libCint.lib $(ROOTSYS)/lib/libHist.lib \
                $(ROOTSYS)/lib/libGraf.lib $(ROOTSYS)/lib/libGraf3d.lib \
                $(ROOTSYS)/lib/libGpad.lib $(ROOTSYS)/lib/libTree.lib \
                $(ROOTSYS)/lib/libRint.lib $(ROOTSYS)/lib/libPostscript.lib \
                $(ROOTSYS)/lib/libMatrix.lib $(ROOTSYS)/lib/libPhysics.lib

LIBS          = $(ROOTLIBS) $(guilibsdll) MSVCIRT.LIB
LIBSALL       = $(ROOTLIBS)
 
#------------------------------------------------------------------------------

headers       = EdbCluster.h EdbView.h EdbRunHeader.h EdbRun.h EdbImage.h EdbFrame.h EdbSegment.h EdbStage.h EdbAffine.h EdbFiducial.h EdbVirtual.h EdbOnline.h EdbPrediction.h


Cint	        = $(headers) EdbLinkDef.h

EDBS          = EdbCluster.cxx EdbView.cxx EdbRunHeader.cxx EdbRun.cxx EdbImage.cxx EdbFrame.cxx EdbSegment.cxx EdbStage.cxx EdbAffine.cxx EdbFiducial.cxx EdbVirtual.cxx EdbOnline.cxx EdbPrediction.cxx Cint.cxx

OBJ           = EdbCluster.obj EdbView.obj EdbRunHeader.obj EdbRun.obj EdbImage.obj EdbFrame.obj EdbSegment.obj EdbStage.obj EdbAffine.obj EdbFiducial.obj EdbVirtual.obj EdbOnline.obj EdbPrediction.obj Cint.obj


EDBSO         = libEdb.$(DllSuf)
EDBLIB	  = libEdb.lib

#------------------------------------------------------------------------------

$(EDBSO): $(OBJ)
		BINDEXPLIB  $* $(OBJ) > $*.def
		lib /nologo /MACHINE:IX86 $(OBJ) /def:$*.def      $(OutPutOpt)$(EDBLIB)
		$(LD) $(LDDEBUG) $(SOFLAGS) $(OBJ) $*.exp $(LIBS) $(OutPutOpt)$(EDBSO)

Cint.cxx: $(Cint)
		@echo "Generating dictionary Cint..."
			rootcint -f Cint.cxx -c $(Cint)

clean:
		@del /q $(OBJ) Cint.$(SrcSuf) Cint.h *.dll *.lib *.exp *.pdb *.def

depend:
		@makedepend -I$(INCLUDE) *.cxx >& /dev/null

.SUFFIXES: .$(SrcSuf)

.$(SrcSuf).$(ObjSuf):
		$(CXX) $(CXXFLAGS) -c $<
